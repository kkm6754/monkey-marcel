package main


// 动态规划


// 极可能动态规划求解
// 1. 求最大值、最小值
// 2. 判断是否可行
// 3. 统计方案个数


// 极不可能使用动态规划求解
// 1. 求具体方案而非方案个数
// 2. 输入数据是一个 集合 而不是一个 序列



// 动态规划四要素
// 1.状态 State
//		灵感，创造力，存储小规模问题的结果
// 2.方程 Function
//		状态之间的联系，怎么通过小的状态，来算大的状态
// 3.初始化 Initialization
//		最极限的小状态是什么, 起点
// 4.答案 Answer
//		最大的那个状态是什么，终点


// 面试中常见的动态规划类型
// 坐标型动态规划 15%  type1
// 序列型动态规划 30%  type2
// 双序列动态规划 30%  type3
// 划分型动态规划 10%
// 背包型动态规划 10% 
// 区间型动态规划 5%


// 坐标型动态规划
// state:
//		f[x] 表示我从起点走到坐标x...... f[x][y] 表示我从起点走到坐标x,y......
// function: 研究走到x,y这个点之前的一步 
// initialize: 起点
// answer: 终点


// 单序列型动态规划
// state: 
//		f[i]表示前i个位置/数字/字母,第i个... 
// function: f[i] = f[j] ... j 是i之前的一个位置 
// initialize: f[0]..
// answer: f[n-1]..


// 双序列型动态规划
// state: 
//		f[i][j]代表了第一个sequence的前i个数字/字符，配上第二个sequence 的前j个...
// function: f[i][j] = 研究第i个和第j个的匹配关系
// initialize: f[i][0] 和 f[0][i]
// answer: f[s1.length()][s2.length()]